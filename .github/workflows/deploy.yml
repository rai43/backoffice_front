name: Deploy React App

on:
  push:
    branches:
    - master # Trigger deployment on push to main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18' # Set this to your node version or the project version

    - name: Install Dependencies
      run: npm install

    - name: Build Project
      run: npm run build

    - name: Setup SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SERVER_SSH_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
        name: id_rsa # optional
        passphrase: ${{ secrets.SSH_PASSPHRASE }} # Here we use the passphrase

    - name: Executing remote SSH commands using password
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          whoami
          ls -al
          # sudo su
          # cd /var/www/back-office/htdocs/frontend/
          # TIMESTAMP=$(date +%F-%T)
          # mkdir -p test_old_builds
          # if [ -d "build" ]; then
          #   cp -R build "test_old_builds/old_build_$TIMESTAMP"
          #   # mv build "old_builds/old_build_$TIMESTAMP"
          # fi
          # mv build ./test_build





    

    # - name: Add SSH key to agent with passphrase
    #   env:
    #     SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
    #   run: |
    #     #!/usr/bin/expect -f
    #     spawn ssh-add /home/runner/.ssh/known_hosts
    #     expect "Enter passphrase for /home/runner/.ssh/known_hosts:"
    #     send "$SSH_PASSPHRASE\r"
    #     expect eof


  
    # - name: SSH and Deploy
    #   run: |
    #     ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'EOF'
    #       # Commands to execute on your server

    #       # Connect as sudo user
    #       sudo su

    #       # Move to the project directory
    #       cd /var/www/back-office/htdocs/frontend/

    #       # Timestamp for the build
    #       TIMESTAMP=$(date +%F-%T)

    #       # Create a directory for old builds if it doesn't exist
    #       mkdir -p old_builds

    #       # Move the current build to the old_builds directory
    #       if [ -d "build" ]; then
    #         mv build "old_builds/old_build_$TIMESTAMP"
    #       fi

    #       # Since the entire repo (including the build directory) is transferred
    #       # to the server by the ssh-action, the 'build' directory will be in the
    #       # root directory where the SSH command is executed.
    #       # Now, move the new 'build' directory to the desired location
    #       mv build ./build
    #     EOF
